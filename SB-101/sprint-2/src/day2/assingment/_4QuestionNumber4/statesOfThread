What are the different states of a thread, or what is thread lifecycle?

An application when it is under execution is called a process.
A thread is a part or sub-process of an application.
A thread is a lightweight sub-process, the smallest unit of processing. It is a separate path of execution.
A thread is a separate flow of execution that execute some functionality of a program with the other part of the
program simultaneously.

Note: In Java, every program/application has a default flow of execution, a default thread, it is called the main
thread. if we can start another flow of execution(another thread) along with the main thread simultaneously
then it is called a multithreaded application or program.



Life-cycle of a Thread (State of a thread):
In Java, a thread always exists in any one of the following states. These states are:

1. New state  : Thread t = new Thread(r);
2. Runnable state : t.start();
3. Running state : Selected to run by the Thread Scheduler
4. Blocked state : sleep(), wait(), join() -- > when sleep times get over, intrrupt(), notify() etc --> goes again in runnable state
5. Dead state : If run() method complete