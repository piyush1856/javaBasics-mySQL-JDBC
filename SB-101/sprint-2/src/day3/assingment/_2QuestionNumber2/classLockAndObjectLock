

Object level lock is mechanism when we want to synchronize a non-static method or non-static code block 
such that only one thread will be able to execute the code block on given instance of the class. 
This should always be done to make instance level data thread safe.



Class level lock prevents multiple threads to enter in synchronized block in any of all available 
instances of the class on runtime. This means if in runtime there are 100 instances of DemoClass, 
then only one thread will be able to execute demoMethod() in any one of instance at a time, and all 
other instances will be locked for other threads.
Class level locking should always be done to make static data thread safe. As we know that static 
keyword associate data of methods to class level, so use locking at static fields or methods to make it on class level.