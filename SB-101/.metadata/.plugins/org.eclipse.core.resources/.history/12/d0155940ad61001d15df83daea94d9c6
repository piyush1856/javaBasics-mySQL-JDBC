package com.mgnrega.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;

import com.mgnrega.exception.CredentialException;
import com.mgnrega.exception.GramPanchayatException;
import com.mgnrega.exception.ProjectException;
import com.mgnrega.model.GramPanchayat;
import com.mgnrega.model.Project;
import com.mgnrega.utility.DBUtility;

public class BdoImplementation implements BdoInterface {
	
	/*----------------------------Login into their account------------------------------------------------------*/

	@Override
	public String bdologin(String username, String password) throws CredentialException {
		
		String result = "Invalid Credentials!";
		
		if (username.equals(BdoInterface.username) && password.equals(BdoInterface.password)) {
			 result = "Welcome to BDO Account. Login Successful!";
		}else {
			throw new CredentialException(result);
		}
		return result;	
	}
	
	
	/*----------------------------------- Create a project --------------------------------------------------------*/
	
	@Override
	public String createProject(Project p) throws ProjectException {
		
		String result ="Project Not Created.";
		
		try (Connection conn = DBUtility.provideConnection()){
			
			PreparedStatement ps = conn.prepareStatement("insert into project (pname,pcost,pduration) values(?,?,?)");
			
			ps.setString(1, p.getPname());
			ps.setInt(2, p.getPcost());
			ps.setInt(3, p.getDuration());
			
			int x = ps.executeUpdate();
			
			if(x>0) {
				result = "Project Created.";
			}else {
				throw new ProjectException(result);
			}
			
		} catch (SQLException e) {
			throw new ProjectException("Exception : Check SQL Syntax.");
		}
		
		return result;
	}

	
	
	/*----------------------------------- View List Of Project --------------------------------------------------------*/

	@Override
	public List<Project> displayAllProject() throws ProjectException {
		
		List<Project> projectList = new ArrayList<>();
		
		try (Connection conn = DBUtility.provideConnection()){
			
			PreparedStatement ps = conn.prepareStatement("select * from project");
			ResultSet rs = ps.executeQuery();
			
			while(rs.next()) {
				
				int pid = rs.getInt("pid");
				int pgpid = rs.getInt("pgpid");
				String name = rs.getString("pname");
				int cost = rs.getInt("pcost");
				int duration = rs.getInt("pduration");
				
				Project p = new Project(pid, pgpid, name, cost, duration);
				projectList.add(p);
			}
		} catch (SQLException e) {
			throw new ProjectException("Exception : Check SQL Syntax.");
		}
		
		if(projectList.size() ==0) {
			throw new ProjectException("Exception : No Project Found.");
		}
		
		return projectList;
	}
	
	
	/*----------------------------Create new Gram Panchayat Member(GPM) --------------------------------------------------*/

	@Override
	public String createGramPanchayatMember(GramPanchayat g) throws GramPanchayatException {
		String result ="Gram Panchayat Member Data Not Inserted.";
		
		try (Connection conn = DBUtility.provideConnection()){
			
			PreparedStatement ps = conn.prepareStatement("insert into grampanchayat (gname,gaddress,gphone,gpassword) values(?,?,?,?)");
			
			ps.setString(1, g.getGname());
			ps.setString(2, g.getAddress());
			ps.setString(3, g.getGphone());
			ps.setString(4, g.getPassword());
			
			
			int x = ps.executeUpdate();
			
			if(x>0) {
				result = "Gram Panchayat data Inserted.";
			}else {
				throw new GramPanchayatException(result);
			}
			
		} catch (SQLException e) {
			throw new GramPanchayatException("Exception : Check SQL Syntax.");
		}
		
		return result;
	}

	
	/*-------------------------------- View List Of Gram Panchayat Member(GPM) ------------------------------------------------*/

	@Override
	public List<GramPanchayat> displayAllGramPayanchayatMember() throws GramPanchayatException {
		List<GramPanchayat> GPMList = new ArrayList<>();
		
		try (Connection conn = DBUtility.provideConnection()){
			
			PreparedStatement ps = conn.prepareStatement("select * from grampanchayat");
			ResultSet rs = ps.executeQuery();
			
			while(rs.next()) {
				
				int gpid = rs.getInt("GPID");
				String name = rs.getString("gName");
				String address = rs.getString("gaddress");
				String phone = rs.getString("gphone");
				String password = rs.getString("gpassword");
				
				
				GramPanchayat g = new GramPanchayat(gpid, name, address, phone, password);
				GPMList.add(g);
			}
		} catch (SQLException e) {
			throw new GramPanchayatException("Exception : Check SQL Syntax.");
		}
		
		if(GPMList.size() ==0) {
			throw new GramPanchayatException("Exception : No Gram Panchayat Member Found.");
		}
		
		return GPMList;
		
		
	}
	
	/*------------------------------------ Allocate  Project to GPM --------------------------------------------------------*/

	@Override
	public String allocateProjectToGPM(int gpmid, int pid) throws ProjectException, GramPanchayatException {
		
		String result = "Project Not Allocated";
		
		try(Connection conn = DBUtility.provideConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("select * from grampanchayat where gpid = ?");
			ps.setInt(1, gpmid);
			
			int x = ps.executeUpdate();
			
			if(x > 0) {
				
				try (Connection conn2 = DBUtility.provideConnection()){
					
					PreparedStatement ps2 = conn.prepareStatement("update project set pgpid = ? where pid =?");
					ps2.setInt(1, gpmid);
					ps2.setInt(2, pid);
					
					int y= ps2.executeUpdate();
					
					if(y > 0) {
						result = "Project Allocated to Gram Panchayat";
						
						PreparedStatement ps3 = conn.prepareStatement("select * from grampanchayat inner join project on gpid = pgpid where gpid =?;");
						ResultSet rs = ps3.executeQuery();
						if(rs.next()) {
							System.out.println("Project with PID " + rs.getInt("pid")+ " allocated to Gram Panchayat Member with GPID " + rs.getInt("GPID")+" and Name : " +rs.getString("gName"));

						}
						

					}else {
						throw new ProjectException("Exception : Project with PID " +pid+" Not Found in Database");
					}
					
					
				} catch (SQLException e) {
					throw new GramPanchayatException("Exception : SQL Syantax Error : " + result);
					//throw new ProjectException("Exception : Project with PID " +pid+" Not Found in Database");
					
				}

			}else {
				throw new GramPanchayatException("Exception : Gram Panchayat Member with GPID " +gpmid+" Not Found in Database");
			}	
		}catch(SQLException s){
			throw new GramPanchayatException("Exception : SQL Syantax Error : " + result);
			//throw new ProjectException("Exception : Project with PID " +pid+" Not Found in Database");
		}
		

		return result;
	}
	
	
	
	
	
	
	
	
	

}
